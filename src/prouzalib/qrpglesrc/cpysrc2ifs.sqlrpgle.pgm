**free
ctl-opt main(main) ;


// ******************************************************
// Copy all source files from a LIB to IFS
//
//  ===> CALL PGM(CPYSRC2IFS) PARM(('MYSRCLIB' (*CHAR 10)) 
//  ('/home/prouza/src_neu' (*CHAR 100)))
//
// ******************************************************



Dcl-pr system                     int(10) extproc('system');
  cmd                             pointer value options(*string);
End-pr;

dcl-s ErrMsg                      char(7) import('_EXCP_MSGID');

// Job-Log output
dcl-pr writeJobLog                int(10) extproc('Qp0zLprintf');
  message                         pointer value options(*string);
end-pr;

Dcl-C log_ende                    CONST(X'25');


dcl-proc main;
    dcl-pi *n;
        p_lib                     char(10) const;
        p_root_dir                char(100) const;
    end-pi;

    dcl-s l_lib varchar(10);
    dcl-s l_file varchar(10);
    dcl-s l_file_tmp varchar(10);
    dcl-s l_mbr varchar(10);
    dcl-s l_ext varchar(10);
    dcl-s l_objtype varchar(10);

    dcl-s l_cmd      varchar(500);
    dcl-s l_root_dir varchar(100);
    dcl-s l_cur_dir      varchar(100);

    exec sql Declare c_cpy cursor for
        SELECT distinct lower(:p_lib), lower(s1.table_name), 
                lower(s1.table_partition),
                lower(s1.source_type), lower(replace(s2.objtype, '*', ''))
        FROM qsys2.SYSPSTAT s1
        left join table (qsys2.object_statistics('*LIBL',
              case when s1.source_type in ('RPG', 'RPGLE', 'SQLRPGLE', 'CBL', 
                              'CBLLE', 'CL', 'CLP', 'CLLE') then '*SRVPGM *PGM'
                   when s1.source_type in ('PF', 'LF', 'DSPF', 'PRTF', 
                              'SQLVIEW', 'SQLTABLE', 'SQLINDEX') then '*FILE'
                   when s1.source_type in ('CMD') then '*CMD'
                   else '*ALL'
              end,
              s1.table_partition )) s2
          on s2.objname = s1.table_partition
        WHERE s1.table_schema = :p_lib
        AND s1.source_type IN ('RPG', 'RPGLE', 'SQLRPGLE', 'CBL', 'CBLLE', 'CL',
             'CLP', 'CLLE', 'PF', 'LF', 'DSPF', 'PRTF', 'SQLVIEW', 'SQLTABLE',
             'SQLINDEX', 'CMD')
        and s1.table_partition <> ''
        and s1.table_name not like 'EVF%'
        and s1.table_name not like 'X%'
        and s2.objtype is not null;

    writeJobLog ('Start' + log_ende);


    exec sql open c_cpy;
    exec sql fetch c_cpy into :l_lib, :l_file, :l_mbr, :l_ext, :l_objtype;

    l_root_dir= %trim(p_root_dir) + '/' + 
                %char(%timestamp(*SYS : 0) : *ISO) + '/' + 
                %trim(p_lib);

    // Create directory and all it's parent folders if not exist
    l_cmd = 'QSH cmd(''mkdir -p ' + l_root_dir + ''')';
    writeJobLog (l_cmd + log_ende);
    system(l_cmd);

      dow sqlcode = 0;

      if (l_file <> l_file_tmp);
          l_file_tmp = l_file;
          l_cur_dir = l_root_dir + '/' + l_file;
          l_cmd = 'mkdir ''' + l_cur_dir + '''';
          writeJobLog (l_cmd + log_ende);
          system(l_cmd);
          l_cmd = 'CHGATR OBJ(''' + l_cur_dir + ''') ATR(*CCSID) VALUE(1208)';
          writeJobLog (l_cmd + log_ende);
          system(l_cmd);
      ENDIF;

      l_cmd = 'CPYTOSTMF FROMMBR(''/QSYS.LIB/' + %trim(p_lib) + '.LIB/' + 
                      l_file + '.FILE/' +
                      l_mbr + '.MBR'') STMFCCSID(1208) +
                  TOSTMF(''' + l_cur_dir + '/' + l_mbr + '.' + l_ext + '.' + 
                        l_objtype + ''')';
      clear ErrMsg;
      system (l_cmd);

      if (ErrMsg <> '');
          writeJobLog ('Error in Command: ' + ErrMsg + log_ende);
          writeJobLog (l_cmd + log_ende);
          return;
      ENDIF;

      exec sql fetch c_cpy into :l_lib, :l_file, :l_mbr, :l_ext, :l_objtype;
    ENDDO;

    exec sql close c_cpy;

    return;

end-proc;